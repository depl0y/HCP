{"name":"HCP","tagline":"An iOS application to control HomeWizard, Hue and other devices in your home.","body":"Home Control Panel\r\n==================\r\n\r\nHome Control Panel has been in development for a couple of months now, where the first try to set up this project was too complex and user-unfriendly. Because the scope of the project changed a bit (explanation below) and because I was ready for a *swift*-only project, I decided that most of the stuff could use a rewrite.\r\n\r\n#Goals\r\nThe goals of **HCP** are to be able to control my home from an iPad which I have laying around. For this, you of course need hardware to perform most of (well, actually: all) functions this application offers.\r\n\r\nI want to be able to connect to several devices and all control them from one giant control-panel. With this functionality I want to stay as close to the feature-set as the supported hardware supports.\r\n\r\nAt first the idea was that only [HomeWizard][1] devices could be controlled by this application, but as soon as I added beta testers to the first alpha release of the application, requests for more supported devices came rolling in. So HCP is now less [HomeWizard][1] focussed and also functions when you do not have one.\r\n\r\n#iOS Compatibility\r\n\r\niOS7 and up probably, but when HomeKit is fully revealed by Apple it might be iOS8 and higher.\r\n\r\n#Supported Hardware\r\n\r\nCurrently the project focusses on 2 hardware devices, but can later be expanded by either me or other fellow developers.\r\n\r\n###HomeWizard\r\nThe [HomeWizard][1] is a device that let's you tie all kinds of devices together. A couple of supported devices are:\r\n* Smart P1 based power meters\r\n* Klik-aan/Klik-uit switches (quite popular in the Netherlands)\r\n* RF based door sensors\r\n* RF based thermometers\r\n\r\n###Philips Hue\r\nDoes the [Philips Hue Bridge][2] need an introduction? RGB LED powered lights which can be controlled using your phone or tablet.\r\n\r\n#Model definitions\r\nIn the model these are defined as `Controller` objects. A `Controller` is a device that can control one or more connected devices (like lights, cameras etc.).\r\n\r\nBecause every controller has different discovery methods and ways to communicate with its devices, the `HueBridge` and `HomeWizard` classes are subclassed from the abstract `Controller` class.\r\n\r\n[1]: http://homewizard.nl\r\n[2]: http://www2.meethue.com/en-US\r\n\r\n#Localisation\r\nThe application will be prepared to be fully multi-lingual, but our main focus is English and Dutch.\r\n\r\n#Used Frameworks and tools\r\n\r\nFor this application I currently use the following frameworks:\r\n\r\n* [AFNetworking][3] - An awesome networking library that I use for all HTTP requests.\r\n* [MagicalRecord][4] - CoreData in an ActiveRecord kind of way\r\n* [Mogenerator][5] - Generate Swift files for my CoreData models\r\n* [CocoaLumberjack][6] - Better logging than `NSLog`.\r\n\r\n[3]: http://afnetworking.com\r\n[4]: https://github.com/magicalpanda/MagicalRecord\r\n[5]: https://github.com/rentzsch/mogenerator\r\n[6]: https://github.com/CocoaLumberjack/CocoaLumberjack\r\n\r\n#License\r\nI chose the current license because I want to be able to share my progress and code with the world, but I also have the intention of putting this application up in the Apple App Store and maybe fund some more hardware for my HCP setup.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}